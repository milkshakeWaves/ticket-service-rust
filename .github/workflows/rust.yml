name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ticket_app
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Cache sqlx-cli
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/sqlx
          ~/.cargo/git
          ~/.cargo/registry
        key: ${{ runner.os }}-sqlx-cli-${{ hashFiles('**/Cargo.lock') }}
    - name: Install sqlx-cli
      run: cargo install sqlx-cli --no-default-features --features native-tls,postgres
      if: steps.cache-sqlx-cli.outputs.cache-hit != 'true'
    - name: Install pg_dump
      run: sudo apt-get install postgresql-client
    - name: Run migration
      run: sqlx database create && sqlx migrate run
      env: 
        DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: mv .env.github .env && cargo test --verbose
    - uses: actions/upload-artifact@v2
      with:
        name: db-artifact
        path: var/test-artifact/
    - name: Drop database
      if: success()
      run: sqlx database drop
